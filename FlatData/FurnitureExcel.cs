// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FurnitureExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static FurnitureExcel GetRootAsFurnitureExcel(ByteBuffer _bb) { return GetRootAsFurnitureExcel(_bb, new FurnitureExcel()); }
  public static FurnitureExcel GetRootAsFurnitureExcel(ByteBuffer _bb, FurnitureExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FurnitureExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatData.ProductionStep ProductionStep { get { int o = __p.__offset(6); return o != 0 ? (FlatData.ProductionStep)__p.bb.GetInt(o + __p.bb_pos) : FlatData.ProductionStep.ToDo; } }
  public FlatData.Rarity Rarity { get { int o = __p.__offset(8); return o != 0 ? (FlatData.Rarity)__p.bb.GetInt(o + __p.bb_pos) : FlatData.Rarity.N; } }
  public FlatData.FurnitureCategory Category { get { int o = __p.__offset(10); return o != 0 ? (FlatData.FurnitureCategory)__p.bb.GetInt(o + __p.bb_pos) : FlatData.FurnitureCategory.Furnitures; } }
  public FlatData.FurnitureSubCategory SubCategory { get { int o = __p.__offset(12); return o != 0 ? (FlatData.FurnitureSubCategory)__p.bb.GetInt(o + __p.bb_pos) : FlatData.FurnitureSubCategory.Table; } }
  public uint LocalizeEtcId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public int StarGradeInit { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long Tier { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string Icon { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(20); }
  public int SizeWidth { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SizeHeight { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int OtherSize { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExpandWidth { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool Enable { get { int o = __p.__offset(30); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool ReverseRotation { get { int o = __p.__offset(32); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Prefab { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetPrefabBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetPrefabArray() { return __p.__vector_as_array<byte>(34); }
  public string PrefabExpand { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrefabExpandBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetPrefabExpandBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetPrefabExpandArray() { return __p.__vector_as_array<byte>(36); }
  public string SubPrefab { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSubPrefabBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetSubPrefabBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetSubPrefabArray() { return __p.__vector_as_array<byte>(38); }
  public string SubExpandPrefab { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSubExpandPrefabBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetSubExpandPrefabBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetSubExpandPrefabArray() { return __p.__vector_as_array<byte>(40); }
  public string CornerPrefab { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCornerPrefabBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetCornerPrefabBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetCornerPrefabArray() { return __p.__vector_as_array<byte>(42); }
  public long StackableMax { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long RecipeCraftId { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long SetGroudpId { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ComfortBonus { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long VisitOperationType { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long VisitBonusOperationType { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatData.Tag Tags(int j) { int o = __p.__offset(56); return o != 0 ? (FlatData.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (FlatData.Tag)0; }
  public int TagsLength { get { int o = __p.__offset(56); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<FlatData.Tag> GetTagsBytes() { return __p.__vector_as_span<FlatData.Tag>(56, 4); }
#else
  public ArraySegment<byte>? GetTagsBytes() { return __p.__vector_as_arraysegment(56); }
#endif
  public FlatData.Tag[] GetTagsArray() { int o = __p.__offset(56); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); FlatData.Tag[] a = new FlatData.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (FlatData.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public long CraftQualityTier0 { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CraftQualityTier1 { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CraftQualityTier2 { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ShiftingCraftQuality { get { int o = __p.__offset(64); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatData.FurnitureFunctionType FurnitureFunctionType { get { int o = __p.__offset(66); return o != 0 ? (FlatData.FurnitureFunctionType)__p.bb.GetInt(o + __p.bb_pos) : FlatData.FurnitureFunctionType.None; } }
  public long FurnitureFunctionParameter { get { int o = __p.__offset(68); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long VideoId { get { int o = __p.__offset(70); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long EventCollectionId { get { int o = __p.__offset(72); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long FurnitureBubbleOffsetX { get { int o = __p.__offset(74); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long FurnitureBubbleOffsetY { get { int o = __p.__offset(76); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string CafeCharacterStateReq(int j) { int o = __p.__offset(78); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int CafeCharacterStateReqLength { get { int o = __p.__offset(78); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string CafeCharacterStateAdd(int j) { int o = __p.__offset(80); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int CafeCharacterStateAddLength { get { int o = __p.__offset(80); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string CafeCharacterStateMake(int j) { int o = __p.__offset(82); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int CafeCharacterStateMakeLength { get { int o = __p.__offset(82); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string CafeCharacterStateOnly(int j) { int o = __p.__offset(84); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int CafeCharacterStateOnlyLength { get { int o = __p.__offset(84); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<FlatData.FurnitureExcel> CreateFurnitureExcel(FlatBufferBuilder builder,
      long Id = 0,
      FlatData.ProductionStep ProductionStep = FlatData.ProductionStep.ToDo,
      FlatData.Rarity Rarity = FlatData.Rarity.N,
      FlatData.FurnitureCategory Category = FlatData.FurnitureCategory.Furnitures,
      FlatData.FurnitureSubCategory SubCategory = FlatData.FurnitureSubCategory.Table,
      uint LocalizeEtcId = 0,
      int StarGradeInit = 0,
      long Tier = 0,
      StringOffset IconOffset = default(StringOffset),
      int SizeWidth = 0,
      int SizeHeight = 0,
      int OtherSize = 0,
      int ExpandWidth = 0,
      bool Enable = false,
      bool ReverseRotation = false,
      StringOffset PrefabOffset = default(StringOffset),
      StringOffset PrefabExpandOffset = default(StringOffset),
      StringOffset SubPrefabOffset = default(StringOffset),
      StringOffset SubExpandPrefabOffset = default(StringOffset),
      StringOffset CornerPrefabOffset = default(StringOffset),
      long StackableMax = 0,
      long RecipeCraftId = 0,
      long SetGroudpId = 0,
      long ComfortBonus = 0,
      long VisitOperationType = 0,
      long VisitBonusOperationType = 0,
      VectorOffset TagsOffset = default(VectorOffset),
      long CraftQualityTier0 = 0,
      long CraftQualityTier1 = 0,
      long CraftQualityTier2 = 0,
      long ShiftingCraftQuality = 0,
      FlatData.FurnitureFunctionType FurnitureFunctionType = FlatData.FurnitureFunctionType.None,
      long FurnitureFunctionParameter = 0,
      long VideoId = 0,
      long EventCollectionId = 0,
      long FurnitureBubbleOffsetX = 0,
      long FurnitureBubbleOffsetY = 0,
      VectorOffset CafeCharacterStateReqOffset = default(VectorOffset),
      VectorOffset CafeCharacterStateAddOffset = default(VectorOffset),
      VectorOffset CafeCharacterStateMakeOffset = default(VectorOffset),
      VectorOffset CafeCharacterStateOnlyOffset = default(VectorOffset)) {
    builder.StartTable(41);
    FurnitureExcel.AddFurnitureBubbleOffsetY(builder, FurnitureBubbleOffsetY);
    FurnitureExcel.AddFurnitureBubbleOffsetX(builder, FurnitureBubbleOffsetX);
    FurnitureExcel.AddEventCollectionId(builder, EventCollectionId);
    FurnitureExcel.AddVideoId(builder, VideoId);
    FurnitureExcel.AddFurnitureFunctionParameter(builder, FurnitureFunctionParameter);
    FurnitureExcel.AddShiftingCraftQuality(builder, ShiftingCraftQuality);
    FurnitureExcel.AddCraftQualityTier2(builder, CraftQualityTier2);
    FurnitureExcel.AddCraftQualityTier1(builder, CraftQualityTier1);
    FurnitureExcel.AddCraftQualityTier0(builder, CraftQualityTier0);
    FurnitureExcel.AddVisitBonusOperationType(builder, VisitBonusOperationType);
    FurnitureExcel.AddVisitOperationType(builder, VisitOperationType);
    FurnitureExcel.AddComfortBonus(builder, ComfortBonus);
    FurnitureExcel.AddSetGroudpId(builder, SetGroudpId);
    FurnitureExcel.AddRecipeCraftId(builder, RecipeCraftId);
    FurnitureExcel.AddStackableMax(builder, StackableMax);
    FurnitureExcel.AddTier(builder, Tier);
    FurnitureExcel.AddId(builder, Id);
    FurnitureExcel.AddCafeCharacterStateOnly(builder, CafeCharacterStateOnlyOffset);
    FurnitureExcel.AddCafeCharacterStateMake(builder, CafeCharacterStateMakeOffset);
    FurnitureExcel.AddCafeCharacterStateAdd(builder, CafeCharacterStateAddOffset);
    FurnitureExcel.AddCafeCharacterStateReq(builder, CafeCharacterStateReqOffset);
    FurnitureExcel.AddFurnitureFunctionType(builder, FurnitureFunctionType);
    FurnitureExcel.AddTags(builder, TagsOffset);
    FurnitureExcel.AddCornerPrefab(builder, CornerPrefabOffset);
    FurnitureExcel.AddSubExpandPrefab(builder, SubExpandPrefabOffset);
    FurnitureExcel.AddSubPrefab(builder, SubPrefabOffset);
    FurnitureExcel.AddPrefabExpand(builder, PrefabExpandOffset);
    FurnitureExcel.AddPrefab(builder, PrefabOffset);
    FurnitureExcel.AddExpandWidth(builder, ExpandWidth);
    FurnitureExcel.AddOtherSize(builder, OtherSize);
    FurnitureExcel.AddSizeHeight(builder, SizeHeight);
    FurnitureExcel.AddSizeWidth(builder, SizeWidth);
    FurnitureExcel.AddIcon(builder, IconOffset);
    FurnitureExcel.AddStarGradeInit(builder, StarGradeInit);
    FurnitureExcel.AddLocalizeEtcId(builder, LocalizeEtcId);
    FurnitureExcel.AddSubCategory(builder, SubCategory);
    FurnitureExcel.AddCategory(builder, Category);
    FurnitureExcel.AddRarity(builder, Rarity);
    FurnitureExcel.AddProductionStep(builder, ProductionStep);
    FurnitureExcel.AddReverseRotation(builder, ReverseRotation);
    FurnitureExcel.AddEnable(builder, Enable);
    return FurnitureExcel.EndFurnitureExcel(builder);
  }

  public static void StartFurnitureExcel(FlatBufferBuilder builder) { builder.StartTable(41); }
  public static void AddId(FlatBufferBuilder builder, long id) { builder.AddLong(0, id, 0); }
  public static void AddProductionStep(FlatBufferBuilder builder, FlatData.ProductionStep productionStep) { builder.AddInt(1, (int)productionStep, 0); }
  public static void AddRarity(FlatBufferBuilder builder, FlatData.Rarity rarity) { builder.AddInt(2, (int)rarity, 0); }
  public static void AddCategory(FlatBufferBuilder builder, FlatData.FurnitureCategory category) { builder.AddInt(3, (int)category, 0); }
  public static void AddSubCategory(FlatBufferBuilder builder, FlatData.FurnitureSubCategory subCategory) { builder.AddInt(4, (int)subCategory, 0); }
  public static void AddLocalizeEtcId(FlatBufferBuilder builder, uint localizeEtcId) { builder.AddUint(5, localizeEtcId, 0); }
  public static void AddStarGradeInit(FlatBufferBuilder builder, int starGradeInit) { builder.AddInt(6, starGradeInit, 0); }
  public static void AddTier(FlatBufferBuilder builder, long tier) { builder.AddLong(7, tier, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(8, iconOffset.Value, 0); }
  public static void AddSizeWidth(FlatBufferBuilder builder, int sizeWidth) { builder.AddInt(9, sizeWidth, 0); }
  public static void AddSizeHeight(FlatBufferBuilder builder, int sizeHeight) { builder.AddInt(10, sizeHeight, 0); }
  public static void AddOtherSize(FlatBufferBuilder builder, int otherSize) { builder.AddInt(11, otherSize, 0); }
  public static void AddExpandWidth(FlatBufferBuilder builder, int expandWidth) { builder.AddInt(12, expandWidth, 0); }
  public static void AddEnable(FlatBufferBuilder builder, bool enable) { builder.AddBool(13, enable, false); }
  public static void AddReverseRotation(FlatBufferBuilder builder, bool reverseRotation) { builder.AddBool(14, reverseRotation, false); }
  public static void AddPrefab(FlatBufferBuilder builder, StringOffset prefabOffset) { builder.AddOffset(15, prefabOffset.Value, 0); }
  public static void AddPrefabExpand(FlatBufferBuilder builder, StringOffset prefabExpandOffset) { builder.AddOffset(16, prefabExpandOffset.Value, 0); }
  public static void AddSubPrefab(FlatBufferBuilder builder, StringOffset subPrefabOffset) { builder.AddOffset(17, subPrefabOffset.Value, 0); }
  public static void AddSubExpandPrefab(FlatBufferBuilder builder, StringOffset subExpandPrefabOffset) { builder.AddOffset(18, subExpandPrefabOffset.Value, 0); }
  public static void AddCornerPrefab(FlatBufferBuilder builder, StringOffset cornerPrefabOffset) { builder.AddOffset(19, cornerPrefabOffset.Value, 0); }
  public static void AddStackableMax(FlatBufferBuilder builder, long stackableMax) { builder.AddLong(20, stackableMax, 0); }
  public static void AddRecipeCraftId(FlatBufferBuilder builder, long recipeCraftId) { builder.AddLong(21, recipeCraftId, 0); }
  public static void AddSetGroudpId(FlatBufferBuilder builder, long setGroudpId) { builder.AddLong(22, setGroudpId, 0); }
  public static void AddComfortBonus(FlatBufferBuilder builder, long comfortBonus) { builder.AddLong(23, comfortBonus, 0); }
  public static void AddVisitOperationType(FlatBufferBuilder builder, long visitOperationType) { builder.AddLong(24, visitOperationType, 0); }
  public static void AddVisitBonusOperationType(FlatBufferBuilder builder, long visitBonusOperationType) { builder.AddLong(25, visitBonusOperationType, 0); }
  public static void AddTags(FlatBufferBuilder builder, VectorOffset tagsOffset) { builder.AddOffset(26, tagsOffset.Value, 0); }
  public static VectorOffset CreateTagsVector(FlatBufferBuilder builder, FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<FlatData.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<FlatData.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCraftQualityTier0(FlatBufferBuilder builder, long craftQualityTier0) { builder.AddLong(27, craftQualityTier0, 0); }
  public static void AddCraftQualityTier1(FlatBufferBuilder builder, long craftQualityTier1) { builder.AddLong(28, craftQualityTier1, 0); }
  public static void AddCraftQualityTier2(FlatBufferBuilder builder, long craftQualityTier2) { builder.AddLong(29, craftQualityTier2, 0); }
  public static void AddShiftingCraftQuality(FlatBufferBuilder builder, long shiftingCraftQuality) { builder.AddLong(30, shiftingCraftQuality, 0); }
  public static void AddFurnitureFunctionType(FlatBufferBuilder builder, FlatData.FurnitureFunctionType furnitureFunctionType) { builder.AddInt(31, (int)furnitureFunctionType, 0); }
  public static void AddFurnitureFunctionParameter(FlatBufferBuilder builder, long furnitureFunctionParameter) { builder.AddLong(32, furnitureFunctionParameter, 0); }
  public static void AddVideoId(FlatBufferBuilder builder, long videoId) { builder.AddLong(33, videoId, 0); }
  public static void AddEventCollectionId(FlatBufferBuilder builder, long eventCollectionId) { builder.AddLong(34, eventCollectionId, 0); }
  public static void AddFurnitureBubbleOffsetX(FlatBufferBuilder builder, long furnitureBubbleOffsetX) { builder.AddLong(35, furnitureBubbleOffsetX, 0); }
  public static void AddFurnitureBubbleOffsetY(FlatBufferBuilder builder, long furnitureBubbleOffsetY) { builder.AddLong(36, furnitureBubbleOffsetY, 0); }
  public static void AddCafeCharacterStateReq(FlatBufferBuilder builder, VectorOffset cafeCharacterStateReqOffset) { builder.AddOffset(37, cafeCharacterStateReqOffset.Value, 0); }
  public static VectorOffset CreateCafeCharacterStateReqVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateReqVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateReqVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateReqVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCafeCharacterStateReqVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCafeCharacterStateAdd(FlatBufferBuilder builder, VectorOffset cafeCharacterStateAddOffset) { builder.AddOffset(38, cafeCharacterStateAddOffset.Value, 0); }
  public static VectorOffset CreateCafeCharacterStateAddVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateAddVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateAddVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateAddVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCafeCharacterStateAddVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCafeCharacterStateMake(FlatBufferBuilder builder, VectorOffset cafeCharacterStateMakeOffset) { builder.AddOffset(39, cafeCharacterStateMakeOffset.Value, 0); }
  public static VectorOffset CreateCafeCharacterStateMakeVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateMakeVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateMakeVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateMakeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCafeCharacterStateMakeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCafeCharacterStateOnly(FlatBufferBuilder builder, VectorOffset cafeCharacterStateOnlyOffset) { builder.AddOffset(40, cafeCharacterStateOnlyOffset.Value, 0); }
  public static VectorOffset CreateCafeCharacterStateOnlyVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateOnlyVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateOnlyVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCafeCharacterStateOnlyVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCafeCharacterStateOnlyVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatData.FurnitureExcel> EndFurnitureExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatData.FurnitureExcel>(o);
  }
  public FurnitureExcelT UnPack() {
    var _o = new FurnitureExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FurnitureExcelT _o) {
    _o.Id = this.Id;
    _o.ProductionStep = this.ProductionStep;
    _o.Rarity = this.Rarity;
    _o.Category = this.Category;
    _o.SubCategory = this.SubCategory;
    _o.LocalizeEtcId = this.LocalizeEtcId;
    _o.StarGradeInit = this.StarGradeInit;
    _o.Tier = this.Tier;
    _o.Icon = this.Icon;
    _o.SizeWidth = this.SizeWidth;
    _o.SizeHeight = this.SizeHeight;
    _o.OtherSize = this.OtherSize;
    _o.ExpandWidth = this.ExpandWidth;
    _o.Enable = this.Enable;
    _o.ReverseRotation = this.ReverseRotation;
    _o.Prefab = this.Prefab;
    _o.PrefabExpand = this.PrefabExpand;
    _o.SubPrefab = this.SubPrefab;
    _o.SubExpandPrefab = this.SubExpandPrefab;
    _o.CornerPrefab = this.CornerPrefab;
    _o.StackableMax = this.StackableMax;
    _o.RecipeCraftId = this.RecipeCraftId;
    _o.SetGroudpId = this.SetGroudpId;
    _o.ComfortBonus = this.ComfortBonus;
    _o.VisitOperationType = this.VisitOperationType;
    _o.VisitBonusOperationType = this.VisitBonusOperationType;
    _o.Tags = new List<FlatData.Tag>();
    for (var _j = 0; _j < this.TagsLength; ++_j) {_o.Tags.Add(this.Tags(_j));}
    _o.CraftQualityTier0 = this.CraftQualityTier0;
    _o.CraftQualityTier1 = this.CraftQualityTier1;
    _o.CraftQualityTier2 = this.CraftQualityTier2;
    _o.ShiftingCraftQuality = this.ShiftingCraftQuality;
    _o.FurnitureFunctionType = this.FurnitureFunctionType;
    _o.FurnitureFunctionParameter = this.FurnitureFunctionParameter;
    _o.VideoId = this.VideoId;
    _o.EventCollectionId = this.EventCollectionId;
    _o.FurnitureBubbleOffsetX = this.FurnitureBubbleOffsetX;
    _o.FurnitureBubbleOffsetY = this.FurnitureBubbleOffsetY;
    _o.CafeCharacterStateReq = new List<string>();
    for (var _j = 0; _j < this.CafeCharacterStateReqLength; ++_j) {_o.CafeCharacterStateReq.Add(this.CafeCharacterStateReq(_j));}
    _o.CafeCharacterStateAdd = new List<string>();
    for (var _j = 0; _j < this.CafeCharacterStateAddLength; ++_j) {_o.CafeCharacterStateAdd.Add(this.CafeCharacterStateAdd(_j));}
    _o.CafeCharacterStateMake = new List<string>();
    for (var _j = 0; _j < this.CafeCharacterStateMakeLength; ++_j) {_o.CafeCharacterStateMake.Add(this.CafeCharacterStateMake(_j));}
    _o.CafeCharacterStateOnly = new List<string>();
    for (var _j = 0; _j < this.CafeCharacterStateOnlyLength; ++_j) {_o.CafeCharacterStateOnly.Add(this.CafeCharacterStateOnly(_j));}
  }
  public static Offset<FlatData.FurnitureExcel> Pack(FlatBufferBuilder builder, FurnitureExcelT _o) {
    if (_o == null) return default(Offset<FlatData.FurnitureExcel>);
    var _Icon = _o.Icon == null ? default(StringOffset) : builder.CreateString(_o.Icon);
    var _Prefab = _o.Prefab == null ? default(StringOffset) : builder.CreateString(_o.Prefab);
    var _PrefabExpand = _o.PrefabExpand == null ? default(StringOffset) : builder.CreateString(_o.PrefabExpand);
    var _SubPrefab = _o.SubPrefab == null ? default(StringOffset) : builder.CreateString(_o.SubPrefab);
    var _SubExpandPrefab = _o.SubExpandPrefab == null ? default(StringOffset) : builder.CreateString(_o.SubExpandPrefab);
    var _CornerPrefab = _o.CornerPrefab == null ? default(StringOffset) : builder.CreateString(_o.CornerPrefab);
    var _Tags = default(VectorOffset);
    if (_o.Tags != null) {
      var __Tags = _o.Tags.ToArray();
      _Tags = CreateTagsVector(builder, __Tags);
    }
    var _CafeCharacterStateReq = default(VectorOffset);
    if (_o.CafeCharacterStateReq != null) {
      var __CafeCharacterStateReq = new StringOffset[_o.CafeCharacterStateReq.Count];
      for (var _j = 0; _j < __CafeCharacterStateReq.Length; ++_j) { __CafeCharacterStateReq[_j] = builder.CreateString(_o.CafeCharacterStateReq[_j]); }
      _CafeCharacterStateReq = CreateCafeCharacterStateReqVector(builder, __CafeCharacterStateReq);
    }
    var _CafeCharacterStateAdd = default(VectorOffset);
    if (_o.CafeCharacterStateAdd != null) {
      var __CafeCharacterStateAdd = new StringOffset[_o.CafeCharacterStateAdd.Count];
      for (var _j = 0; _j < __CafeCharacterStateAdd.Length; ++_j) { __CafeCharacterStateAdd[_j] = builder.CreateString(_o.CafeCharacterStateAdd[_j]); }
      _CafeCharacterStateAdd = CreateCafeCharacterStateAddVector(builder, __CafeCharacterStateAdd);
    }
    var _CafeCharacterStateMake = default(VectorOffset);
    if (_o.CafeCharacterStateMake != null) {
      var __CafeCharacterStateMake = new StringOffset[_o.CafeCharacterStateMake.Count];
      for (var _j = 0; _j < __CafeCharacterStateMake.Length; ++_j) { __CafeCharacterStateMake[_j] = builder.CreateString(_o.CafeCharacterStateMake[_j]); }
      _CafeCharacterStateMake = CreateCafeCharacterStateMakeVector(builder, __CafeCharacterStateMake);
    }
    var _CafeCharacterStateOnly = default(VectorOffset);
    if (_o.CafeCharacterStateOnly != null) {
      var __CafeCharacterStateOnly = new StringOffset[_o.CafeCharacterStateOnly.Count];
      for (var _j = 0; _j < __CafeCharacterStateOnly.Length; ++_j) { __CafeCharacterStateOnly[_j] = builder.CreateString(_o.CafeCharacterStateOnly[_j]); }
      _CafeCharacterStateOnly = CreateCafeCharacterStateOnlyVector(builder, __CafeCharacterStateOnly);
    }
    return CreateFurnitureExcel(
      builder,
      _o.Id,
      _o.ProductionStep,
      _o.Rarity,
      _o.Category,
      _o.SubCategory,
      _o.LocalizeEtcId,
      _o.StarGradeInit,
      _o.Tier,
      _Icon,
      _o.SizeWidth,
      _o.SizeHeight,
      _o.OtherSize,
      _o.ExpandWidth,
      _o.Enable,
      _o.ReverseRotation,
      _Prefab,
      _PrefabExpand,
      _SubPrefab,
      _SubExpandPrefab,
      _CornerPrefab,
      _o.StackableMax,
      _o.RecipeCraftId,
      _o.SetGroudpId,
      _o.ComfortBonus,
      _o.VisitOperationType,
      _o.VisitBonusOperationType,
      _Tags,
      _o.CraftQualityTier0,
      _o.CraftQualityTier1,
      _o.CraftQualityTier2,
      _o.ShiftingCraftQuality,
      _o.FurnitureFunctionType,
      _o.FurnitureFunctionParameter,
      _o.VideoId,
      _o.EventCollectionId,
      _o.FurnitureBubbleOffsetX,
      _o.FurnitureBubbleOffsetY,
      _CafeCharacterStateReq,
      _CafeCharacterStateAdd,
      _CafeCharacterStateMake,
      _CafeCharacterStateOnly);
  }
}

public class FurnitureExcelT
{
  [Newtonsoft.Json.JsonProperty("Id")]
  public long Id { get; set; }
  [Newtonsoft.Json.JsonProperty("ProductionStep")]
  public FlatData.ProductionStep ProductionStep { get; set; }
  [Newtonsoft.Json.JsonProperty("Rarity")]
  public FlatData.Rarity Rarity { get; set; }
  [Newtonsoft.Json.JsonProperty("Category")]
  public FlatData.FurnitureCategory Category { get; set; }
  [Newtonsoft.Json.JsonProperty("SubCategory")]
  public FlatData.FurnitureSubCategory SubCategory { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeEtcId")]
  public uint LocalizeEtcId { get; set; }
  [Newtonsoft.Json.JsonProperty("StarGradeInit")]
  public int StarGradeInit { get; set; }
  [Newtonsoft.Json.JsonProperty("Tier")]
  public long Tier { get; set; }
  [Newtonsoft.Json.JsonProperty("Icon")]
  public string Icon { get; set; }
  [Newtonsoft.Json.JsonProperty("SizeWidth")]
  public int SizeWidth { get; set; }
  [Newtonsoft.Json.JsonProperty("SizeHeight")]
  public int SizeHeight { get; set; }
  [Newtonsoft.Json.JsonProperty("OtherSize")]
  public int OtherSize { get; set; }
  [Newtonsoft.Json.JsonProperty("ExpandWidth")]
  public int ExpandWidth { get; set; }
  [Newtonsoft.Json.JsonProperty("Enable")]
  public bool Enable { get; set; }
  [Newtonsoft.Json.JsonProperty("ReverseRotation")]
  public bool ReverseRotation { get; set; }
  [Newtonsoft.Json.JsonProperty("Prefab")]
  public string Prefab { get; set; }
  [Newtonsoft.Json.JsonProperty("PrefabExpand")]
  public string PrefabExpand { get; set; }
  [Newtonsoft.Json.JsonProperty("SubPrefab")]
  public string SubPrefab { get; set; }
  [Newtonsoft.Json.JsonProperty("SubExpandPrefab")]
  public string SubExpandPrefab { get; set; }
  [Newtonsoft.Json.JsonProperty("CornerPrefab")]
  public string CornerPrefab { get; set; }
  [Newtonsoft.Json.JsonProperty("StackableMax")]
  public long StackableMax { get; set; }
  [Newtonsoft.Json.JsonProperty("RecipeCraftId")]
  public long RecipeCraftId { get; set; }
  [Newtonsoft.Json.JsonProperty("SetGroudpId")]
  public long SetGroudpId { get; set; }
  [Newtonsoft.Json.JsonProperty("ComfortBonus")]
  public long ComfortBonus { get; set; }
  [Newtonsoft.Json.JsonProperty("VisitOperationType")]
  public long VisitOperationType { get; set; }
  [Newtonsoft.Json.JsonProperty("VisitBonusOperationType")]
  public long VisitBonusOperationType { get; set; }
  [Newtonsoft.Json.JsonProperty("Tags")]
  public List<FlatData.Tag> Tags { get; set; }
  [Newtonsoft.Json.JsonProperty("CraftQualityTier0")]
  public long CraftQualityTier0 { get; set; }
  [Newtonsoft.Json.JsonProperty("CraftQualityTier1")]
  public long CraftQualityTier1 { get; set; }
  [Newtonsoft.Json.JsonProperty("CraftQualityTier2")]
  public long CraftQualityTier2 { get; set; }
  [Newtonsoft.Json.JsonProperty("ShiftingCraftQuality")]
  public long ShiftingCraftQuality { get; set; }
  [Newtonsoft.Json.JsonProperty("FurnitureFunctionType")]
  public FlatData.FurnitureFunctionType FurnitureFunctionType { get; set; }
  [Newtonsoft.Json.JsonProperty("FurnitureFunctionParameter")]
  public long FurnitureFunctionParameter { get; set; }
  [Newtonsoft.Json.JsonProperty("VideoId")]
  public long VideoId { get; set; }
  [Newtonsoft.Json.JsonProperty("EventCollectionId")]
  public long EventCollectionId { get; set; }
  [Newtonsoft.Json.JsonProperty("FurnitureBubbleOffsetX")]
  public long FurnitureBubbleOffsetX { get; set; }
  [Newtonsoft.Json.JsonProperty("FurnitureBubbleOffsetY")]
  public long FurnitureBubbleOffsetY { get; set; }
  [Newtonsoft.Json.JsonProperty("CafeCharacterStateReq")]
  public List<string> CafeCharacterStateReq { get; set; }
  [Newtonsoft.Json.JsonProperty("CafeCharacterStateAdd")]
  public List<string> CafeCharacterStateAdd { get; set; }
  [Newtonsoft.Json.JsonProperty("CafeCharacterStateMake")]
  public List<string> CafeCharacterStateMake { get; set; }
  [Newtonsoft.Json.JsonProperty("CafeCharacterStateOnly")]
  public List<string> CafeCharacterStateOnly { get; set; }

  public FurnitureExcelT() {
    this.Id = 0;
    this.ProductionStep = FlatData.ProductionStep.ToDo;
    this.Rarity = FlatData.Rarity.N;
    this.Category = FlatData.FurnitureCategory.Furnitures;
    this.SubCategory = FlatData.FurnitureSubCategory.Table;
    this.LocalizeEtcId = 0;
    this.StarGradeInit = 0;
    this.Tier = 0;
    this.Icon = null;
    this.SizeWidth = 0;
    this.SizeHeight = 0;
    this.OtherSize = 0;
    this.ExpandWidth = 0;
    this.Enable = false;
    this.ReverseRotation = false;
    this.Prefab = null;
    this.PrefabExpand = null;
    this.SubPrefab = null;
    this.SubExpandPrefab = null;
    this.CornerPrefab = null;
    this.StackableMax = 0;
    this.RecipeCraftId = 0;
    this.SetGroudpId = 0;
    this.ComfortBonus = 0;
    this.VisitOperationType = 0;
    this.VisitBonusOperationType = 0;
    this.Tags = null;
    this.CraftQualityTier0 = 0;
    this.CraftQualityTier1 = 0;
    this.CraftQualityTier2 = 0;
    this.ShiftingCraftQuality = 0;
    this.FurnitureFunctionType = FlatData.FurnitureFunctionType.None;
    this.FurnitureFunctionParameter = 0;
    this.VideoId = 0;
    this.EventCollectionId = 0;
    this.FurnitureBubbleOffsetX = 0;
    this.FurnitureBubbleOffsetY = 0;
    this.CafeCharacterStateReq = null;
    this.CafeCharacterStateAdd = null;
    this.CafeCharacterStateMake = null;
    this.CafeCharacterStateOnly = null;
  }
}


static public class FurnitureExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*ProductionStep*/, 4 /*FlatData.ProductionStep*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Rarity*/, 4 /*FlatData.Rarity*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Category*/, 4 /*FlatData.FurnitureCategory*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*SubCategory*/, 4 /*FlatData.FurnitureSubCategory*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*LocalizeEtcId*/, 4 /*uint*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*StarGradeInit*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*Tier*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 20 /*Icon*/, false)
      && verifier.VerifyField(tablePos, 22 /*SizeWidth*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*SizeHeight*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*OtherSize*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 28 /*ExpandWidth*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 30 /*Enable*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 32 /*ReverseRotation*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 34 /*Prefab*/, false)
      && verifier.VerifyString(tablePos, 36 /*PrefabExpand*/, false)
      && verifier.VerifyString(tablePos, 38 /*SubPrefab*/, false)
      && verifier.VerifyString(tablePos, 40 /*SubExpandPrefab*/, false)
      && verifier.VerifyString(tablePos, 42 /*CornerPrefab*/, false)
      && verifier.VerifyField(tablePos, 44 /*StackableMax*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 46 /*RecipeCraftId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 48 /*SetGroudpId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 50 /*ComfortBonus*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 52 /*VisitOperationType*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 54 /*VisitBonusOperationType*/, 8 /*long*/, 8, false)
      && verifier.VerifyVectorOfData(tablePos, 56 /*Tags*/, 4 /*FlatData.Tag*/, false)
      && verifier.VerifyField(tablePos, 58 /*CraftQualityTier0*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 60 /*CraftQualityTier1*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 62 /*CraftQualityTier2*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 64 /*ShiftingCraftQuality*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 66 /*FurnitureFunctionType*/, 4 /*FlatData.FurnitureFunctionType*/, 4, false)
      && verifier.VerifyField(tablePos, 68 /*FurnitureFunctionParameter*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 70 /*VideoId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 72 /*EventCollectionId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 74 /*FurnitureBubbleOffsetX*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 76 /*FurnitureBubbleOffsetY*/, 8 /*long*/, 8, false)
      && verifier.VerifyVectorOfStrings(tablePos, 78 /*CafeCharacterStateReq*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 80 /*CafeCharacterStateAdd*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 82 /*CafeCharacterStateMake*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 84 /*CafeCharacterStateOnly*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
