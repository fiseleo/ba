// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConquestEventExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ConquestEventExcel GetRootAsConquestEventExcel(ByteBuffer _bb) { return GetRootAsConquestEventExcel(_bb, new ConquestEventExcel()); }
  public static ConquestEventExcel GetRootAsConquestEventExcel(ByteBuffer _bb, ConquestEventExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConquestEventExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long MainStoryEventContentId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public FlatData.ConquestEventType ConquestEventType { get { int o = __p.__offset(8); return o != 0 ? (FlatData.ConquestEventType)__p.bb.GetInt(o + __p.bb_pos) : FlatData.ConquestEventType.None; } }
  public bool UseErosion { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool UseUnexpectedEvent { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool UseCalculate { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool UseConquestObject { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string EvnetMapGoalLocalize { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEvnetMapGoalLocalizeBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetEvnetMapGoalLocalizeBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetEvnetMapGoalLocalizeArray() { return __p.__vector_as_array<byte>(18); }
  public string EvnetMapNameLocalize { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEvnetMapNameLocalizeBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetEvnetMapNameLocalizeBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetEvnetMapNameLocalizeArray() { return __p.__vector_as_array<byte>(20); }
  public long MapEnterScenarioGroupId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string EvnetScenarioBG { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEvnetScenarioBGBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetEvnetScenarioBGBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetEvnetScenarioBGArray() { return __p.__vector_as_array<byte>(24); }
  public int ManageUnitChange { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AssistCount { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PlayTimeLimitInSeconds { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AnimationUnitAmountMin { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AnimationUnitAmountMax { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float AnimationUnitDelay { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public string LocalizeUnexpected { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeUnexpectedBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetLocalizeUnexpectedBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetLocalizeUnexpectedArray() { return __p.__vector_as_array<byte>(38); }
  public string LocalizeErosions { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeErosionsBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetLocalizeErosionsBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetLocalizeErosionsArray() { return __p.__vector_as_array<byte>(40); }
  public string LocalizeStep { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeStepBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetLocalizeStepBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetLocalizeStepArray() { return __p.__vector_as_array<byte>(42); }
  public string LocalizeTile { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeTileBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetLocalizeTileBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetLocalizeTileArray() { return __p.__vector_as_array<byte>(44); }
  public string LocalizeMapInfo { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeMapInfoBytes() { return __p.__vector_as_span<byte>(46, 1); }
#else
  public ArraySegment<byte>? GetLocalizeMapInfoBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public byte[] GetLocalizeMapInfoArray() { return __p.__vector_as_array<byte>(46); }
  public string LocalizeManage { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeManageBytes() { return __p.__vector_as_span<byte>(48, 1); }
#else
  public ArraySegment<byte>? GetLocalizeManageBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public byte[] GetLocalizeManageArray() { return __p.__vector_as_array<byte>(48); }
  public string LocalizeUpgrade { get { int o = __p.__offset(50); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeUpgradeBytes() { return __p.__vector_as_span<byte>(50, 1); }
#else
  public ArraySegment<byte>? GetLocalizeUpgradeBytes() { return __p.__vector_as_arraysegment(50); }
#endif
  public byte[] GetLocalizeUpgradeArray() { return __p.__vector_as_array<byte>(50); }
  public string LocalizeTreasureBox { get { int o = __p.__offset(52); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeTreasureBoxBytes() { return __p.__vector_as_span<byte>(52, 1); }
#else
  public ArraySegment<byte>? GetLocalizeTreasureBoxBytes() { return __p.__vector_as_arraysegment(52); }
#endif
  public byte[] GetLocalizeTreasureBoxArray() { return __p.__vector_as_array<byte>(52); }
  public long IndividualErosionDailyCount { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FlatData.ConquestEventExcel> CreateConquestEventExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long MainStoryEventContentId = 0,
      FlatData.ConquestEventType ConquestEventType = FlatData.ConquestEventType.None,
      bool UseErosion = false,
      bool UseUnexpectedEvent = false,
      bool UseCalculate = false,
      bool UseConquestObject = false,
      StringOffset EvnetMapGoalLocalizeOffset = default(StringOffset),
      StringOffset EvnetMapNameLocalizeOffset = default(StringOffset),
      long MapEnterScenarioGroupId = 0,
      StringOffset EvnetScenarioBGOffset = default(StringOffset),
      int ManageUnitChange = 0,
      int AssistCount = 0,
      int PlayTimeLimitInSeconds = 0,
      int AnimationUnitAmountMin = 0,
      int AnimationUnitAmountMax = 0,
      float AnimationUnitDelay = 0.0f,
      StringOffset LocalizeUnexpectedOffset = default(StringOffset),
      StringOffset LocalizeErosionsOffset = default(StringOffset),
      StringOffset LocalizeStepOffset = default(StringOffset),
      StringOffset LocalizeTileOffset = default(StringOffset),
      StringOffset LocalizeMapInfoOffset = default(StringOffset),
      StringOffset LocalizeManageOffset = default(StringOffset),
      StringOffset LocalizeUpgradeOffset = default(StringOffset),
      StringOffset LocalizeTreasureBoxOffset = default(StringOffset),
      long IndividualErosionDailyCount = 0) {
    builder.StartTable(26);
    ConquestEventExcel.AddIndividualErosionDailyCount(builder, IndividualErosionDailyCount);
    ConquestEventExcel.AddMapEnterScenarioGroupId(builder, MapEnterScenarioGroupId);
    ConquestEventExcel.AddMainStoryEventContentId(builder, MainStoryEventContentId);
    ConquestEventExcel.AddEventContentId(builder, EventContentId);
    ConquestEventExcel.AddLocalizeTreasureBox(builder, LocalizeTreasureBoxOffset);
    ConquestEventExcel.AddLocalizeUpgrade(builder, LocalizeUpgradeOffset);
    ConquestEventExcel.AddLocalizeManage(builder, LocalizeManageOffset);
    ConquestEventExcel.AddLocalizeMapInfo(builder, LocalizeMapInfoOffset);
    ConquestEventExcel.AddLocalizeTile(builder, LocalizeTileOffset);
    ConquestEventExcel.AddLocalizeStep(builder, LocalizeStepOffset);
    ConquestEventExcel.AddLocalizeErosions(builder, LocalizeErosionsOffset);
    ConquestEventExcel.AddLocalizeUnexpected(builder, LocalizeUnexpectedOffset);
    ConquestEventExcel.AddAnimationUnitDelay(builder, AnimationUnitDelay);
    ConquestEventExcel.AddAnimationUnitAmountMax(builder, AnimationUnitAmountMax);
    ConquestEventExcel.AddAnimationUnitAmountMin(builder, AnimationUnitAmountMin);
    ConquestEventExcel.AddPlayTimeLimitInSeconds(builder, PlayTimeLimitInSeconds);
    ConquestEventExcel.AddAssistCount(builder, AssistCount);
    ConquestEventExcel.AddManageUnitChange(builder, ManageUnitChange);
    ConquestEventExcel.AddEvnetScenarioBG(builder, EvnetScenarioBGOffset);
    ConquestEventExcel.AddEvnetMapNameLocalize(builder, EvnetMapNameLocalizeOffset);
    ConquestEventExcel.AddEvnetMapGoalLocalize(builder, EvnetMapGoalLocalizeOffset);
    ConquestEventExcel.AddConquestEventType(builder, ConquestEventType);
    ConquestEventExcel.AddUseConquestObject(builder, UseConquestObject);
    ConquestEventExcel.AddUseCalculate(builder, UseCalculate);
    ConquestEventExcel.AddUseUnexpectedEvent(builder, UseUnexpectedEvent);
    ConquestEventExcel.AddUseErosion(builder, UseErosion);
    return ConquestEventExcel.EndConquestEventExcel(builder);
  }

  public static void StartConquestEventExcel(FlatBufferBuilder builder) { builder.StartTable(26); }
  public static void AddEventContentId(FlatBufferBuilder builder, long eventContentId) { builder.AddLong(0, eventContentId, 0); }
  public static void AddMainStoryEventContentId(FlatBufferBuilder builder, long mainStoryEventContentId) { builder.AddLong(1, mainStoryEventContentId, 0); }
  public static void AddConquestEventType(FlatBufferBuilder builder, FlatData.ConquestEventType conquestEventType) { builder.AddInt(2, (int)conquestEventType, 0); }
  public static void AddUseErosion(FlatBufferBuilder builder, bool useErosion) { builder.AddBool(3, useErosion, false); }
  public static void AddUseUnexpectedEvent(FlatBufferBuilder builder, bool useUnexpectedEvent) { builder.AddBool(4, useUnexpectedEvent, false); }
  public static void AddUseCalculate(FlatBufferBuilder builder, bool useCalculate) { builder.AddBool(5, useCalculate, false); }
  public static void AddUseConquestObject(FlatBufferBuilder builder, bool useConquestObject) { builder.AddBool(6, useConquestObject, false); }
  public static void AddEvnetMapGoalLocalize(FlatBufferBuilder builder, StringOffset evnetMapGoalLocalizeOffset) { builder.AddOffset(7, evnetMapGoalLocalizeOffset.Value, 0); }
  public static void AddEvnetMapNameLocalize(FlatBufferBuilder builder, StringOffset evnetMapNameLocalizeOffset) { builder.AddOffset(8, evnetMapNameLocalizeOffset.Value, 0); }
  public static void AddMapEnterScenarioGroupId(FlatBufferBuilder builder, long mapEnterScenarioGroupId) { builder.AddLong(9, mapEnterScenarioGroupId, 0); }
  public static void AddEvnetScenarioBG(FlatBufferBuilder builder, StringOffset evnetScenarioBGOffset) { builder.AddOffset(10, evnetScenarioBGOffset.Value, 0); }
  public static void AddManageUnitChange(FlatBufferBuilder builder, int manageUnitChange) { builder.AddInt(11, manageUnitChange, 0); }
  public static void AddAssistCount(FlatBufferBuilder builder, int assistCount) { builder.AddInt(12, assistCount, 0); }
  public static void AddPlayTimeLimitInSeconds(FlatBufferBuilder builder, int playTimeLimitInSeconds) { builder.AddInt(13, playTimeLimitInSeconds, 0); }
  public static void AddAnimationUnitAmountMin(FlatBufferBuilder builder, int animationUnitAmountMin) { builder.AddInt(14, animationUnitAmountMin, 0); }
  public static void AddAnimationUnitAmountMax(FlatBufferBuilder builder, int animationUnitAmountMax) { builder.AddInt(15, animationUnitAmountMax, 0); }
  public static void AddAnimationUnitDelay(FlatBufferBuilder builder, float animationUnitDelay) { builder.AddFloat(16, animationUnitDelay, 0.0f); }
  public static void AddLocalizeUnexpected(FlatBufferBuilder builder, StringOffset localizeUnexpectedOffset) { builder.AddOffset(17, localizeUnexpectedOffset.Value, 0); }
  public static void AddLocalizeErosions(FlatBufferBuilder builder, StringOffset localizeErosionsOffset) { builder.AddOffset(18, localizeErosionsOffset.Value, 0); }
  public static void AddLocalizeStep(FlatBufferBuilder builder, StringOffset localizeStepOffset) { builder.AddOffset(19, localizeStepOffset.Value, 0); }
  public static void AddLocalizeTile(FlatBufferBuilder builder, StringOffset localizeTileOffset) { builder.AddOffset(20, localizeTileOffset.Value, 0); }
  public static void AddLocalizeMapInfo(FlatBufferBuilder builder, StringOffset localizeMapInfoOffset) { builder.AddOffset(21, localizeMapInfoOffset.Value, 0); }
  public static void AddLocalizeManage(FlatBufferBuilder builder, StringOffset localizeManageOffset) { builder.AddOffset(22, localizeManageOffset.Value, 0); }
  public static void AddLocalizeUpgrade(FlatBufferBuilder builder, StringOffset localizeUpgradeOffset) { builder.AddOffset(23, localizeUpgradeOffset.Value, 0); }
  public static void AddLocalizeTreasureBox(FlatBufferBuilder builder, StringOffset localizeTreasureBoxOffset) { builder.AddOffset(24, localizeTreasureBoxOffset.Value, 0); }
  public static void AddIndividualErosionDailyCount(FlatBufferBuilder builder, long individualErosionDailyCount) { builder.AddLong(25, individualErosionDailyCount, 0); }
  public static Offset<FlatData.ConquestEventExcel> EndConquestEventExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatData.ConquestEventExcel>(o);
  }
  public ConquestEventExcelT UnPack() {
    var _o = new ConquestEventExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ConquestEventExcelT _o) {
    _o.EventContentId = this.EventContentId;
    _o.MainStoryEventContentId = this.MainStoryEventContentId;
    _o.ConquestEventType = this.ConquestEventType;
    _o.UseErosion = this.UseErosion;
    _o.UseUnexpectedEvent = this.UseUnexpectedEvent;
    _o.UseCalculate = this.UseCalculate;
    _o.UseConquestObject = this.UseConquestObject;
    _o.EvnetMapGoalLocalize = this.EvnetMapGoalLocalize;
    _o.EvnetMapNameLocalize = this.EvnetMapNameLocalize;
    _o.MapEnterScenarioGroupId = this.MapEnterScenarioGroupId;
    _o.EvnetScenarioBG = this.EvnetScenarioBG;
    _o.ManageUnitChange = this.ManageUnitChange;
    _o.AssistCount = this.AssistCount;
    _o.PlayTimeLimitInSeconds = this.PlayTimeLimitInSeconds;
    _o.AnimationUnitAmountMin = this.AnimationUnitAmountMin;
    _o.AnimationUnitAmountMax = this.AnimationUnitAmountMax;
    _o.AnimationUnitDelay = this.AnimationUnitDelay;
    _o.LocalizeUnexpected = this.LocalizeUnexpected;
    _o.LocalizeErosions = this.LocalizeErosions;
    _o.LocalizeStep = this.LocalizeStep;
    _o.LocalizeTile = this.LocalizeTile;
    _o.LocalizeMapInfo = this.LocalizeMapInfo;
    _o.LocalizeManage = this.LocalizeManage;
    _o.LocalizeUpgrade = this.LocalizeUpgrade;
    _o.LocalizeTreasureBox = this.LocalizeTreasureBox;
    _o.IndividualErosionDailyCount = this.IndividualErosionDailyCount;
  }
  public static Offset<FlatData.ConquestEventExcel> Pack(FlatBufferBuilder builder, ConquestEventExcelT _o) {
    if (_o == null) return default(Offset<FlatData.ConquestEventExcel>);
    var _EvnetMapGoalLocalize = _o.EvnetMapGoalLocalize == null ? default(StringOffset) : builder.CreateString(_o.EvnetMapGoalLocalize);
    var _EvnetMapNameLocalize = _o.EvnetMapNameLocalize == null ? default(StringOffset) : builder.CreateString(_o.EvnetMapNameLocalize);
    var _EvnetScenarioBG = _o.EvnetScenarioBG == null ? default(StringOffset) : builder.CreateString(_o.EvnetScenarioBG);
    var _LocalizeUnexpected = _o.LocalizeUnexpected == null ? default(StringOffset) : builder.CreateString(_o.LocalizeUnexpected);
    var _LocalizeErosions = _o.LocalizeErosions == null ? default(StringOffset) : builder.CreateString(_o.LocalizeErosions);
    var _LocalizeStep = _o.LocalizeStep == null ? default(StringOffset) : builder.CreateString(_o.LocalizeStep);
    var _LocalizeTile = _o.LocalizeTile == null ? default(StringOffset) : builder.CreateString(_o.LocalizeTile);
    var _LocalizeMapInfo = _o.LocalizeMapInfo == null ? default(StringOffset) : builder.CreateString(_o.LocalizeMapInfo);
    var _LocalizeManage = _o.LocalizeManage == null ? default(StringOffset) : builder.CreateString(_o.LocalizeManage);
    var _LocalizeUpgrade = _o.LocalizeUpgrade == null ? default(StringOffset) : builder.CreateString(_o.LocalizeUpgrade);
    var _LocalizeTreasureBox = _o.LocalizeTreasureBox == null ? default(StringOffset) : builder.CreateString(_o.LocalizeTreasureBox);
    return CreateConquestEventExcel(
      builder,
      _o.EventContentId,
      _o.MainStoryEventContentId,
      _o.ConquestEventType,
      _o.UseErosion,
      _o.UseUnexpectedEvent,
      _o.UseCalculate,
      _o.UseConquestObject,
      _EvnetMapGoalLocalize,
      _EvnetMapNameLocalize,
      _o.MapEnterScenarioGroupId,
      _EvnetScenarioBG,
      _o.ManageUnitChange,
      _o.AssistCount,
      _o.PlayTimeLimitInSeconds,
      _o.AnimationUnitAmountMin,
      _o.AnimationUnitAmountMax,
      _o.AnimationUnitDelay,
      _LocalizeUnexpected,
      _LocalizeErosions,
      _LocalizeStep,
      _LocalizeTile,
      _LocalizeMapInfo,
      _LocalizeManage,
      _LocalizeUpgrade,
      _LocalizeTreasureBox,
      _o.IndividualErosionDailyCount);
  }
}

public class ConquestEventExcelT
{
  [Newtonsoft.Json.JsonProperty("EventContentId")]
  public long EventContentId { get; set; }
  [Newtonsoft.Json.JsonProperty("MainStoryEventContentId")]
  public long MainStoryEventContentId { get; set; }
  [Newtonsoft.Json.JsonProperty("ConquestEventType")]
  public FlatData.ConquestEventType ConquestEventType { get; set; }
  [Newtonsoft.Json.JsonProperty("UseErosion")]
  public bool UseErosion { get; set; }
  [Newtonsoft.Json.JsonProperty("UseUnexpectedEvent")]
  public bool UseUnexpectedEvent { get; set; }
  [Newtonsoft.Json.JsonProperty("UseCalculate")]
  public bool UseCalculate { get; set; }
  [Newtonsoft.Json.JsonProperty("UseConquestObject")]
  public bool UseConquestObject { get; set; }
  [Newtonsoft.Json.JsonProperty("EvnetMapGoalLocalize")]
  public string EvnetMapGoalLocalize { get; set; }
  [Newtonsoft.Json.JsonProperty("EvnetMapNameLocalize")]
  public string EvnetMapNameLocalize { get; set; }
  [Newtonsoft.Json.JsonProperty("MapEnterScenarioGroupId")]
  public long MapEnterScenarioGroupId { get; set; }
  [Newtonsoft.Json.JsonProperty("EvnetScenarioBG")]
  public string EvnetScenarioBG { get; set; }
  [Newtonsoft.Json.JsonProperty("ManageUnitChange")]
  public int ManageUnitChange { get; set; }
  [Newtonsoft.Json.JsonProperty("AssistCount")]
  public int AssistCount { get; set; }
  [Newtonsoft.Json.JsonProperty("PlayTimeLimitInSeconds")]
  public int PlayTimeLimitInSeconds { get; set; }
  [Newtonsoft.Json.JsonProperty("AnimationUnitAmountMin")]
  public int AnimationUnitAmountMin { get; set; }
  [Newtonsoft.Json.JsonProperty("AnimationUnitAmountMax")]
  public int AnimationUnitAmountMax { get; set; }
  [Newtonsoft.Json.JsonProperty("AnimationUnitDelay")]
  public float AnimationUnitDelay { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeUnexpected")]
  public string LocalizeUnexpected { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeErosions")]
  public string LocalizeErosions { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeStep")]
  public string LocalizeStep { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeTile")]
  public string LocalizeTile { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeMapInfo")]
  public string LocalizeMapInfo { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeManage")]
  public string LocalizeManage { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeUpgrade")]
  public string LocalizeUpgrade { get; set; }
  [Newtonsoft.Json.JsonProperty("LocalizeTreasureBox")]
  public string LocalizeTreasureBox { get; set; }
  [Newtonsoft.Json.JsonProperty("IndividualErosionDailyCount")]
  public long IndividualErosionDailyCount { get; set; }

  public ConquestEventExcelT() {
    this.EventContentId = 0;
    this.MainStoryEventContentId = 0;
    this.ConquestEventType = FlatData.ConquestEventType.None;
    this.UseErosion = false;
    this.UseUnexpectedEvent = false;
    this.UseCalculate = false;
    this.UseConquestObject = false;
    this.EvnetMapGoalLocalize = null;
    this.EvnetMapNameLocalize = null;
    this.MapEnterScenarioGroupId = 0;
    this.EvnetScenarioBG = null;
    this.ManageUnitChange = 0;
    this.AssistCount = 0;
    this.PlayTimeLimitInSeconds = 0;
    this.AnimationUnitAmountMin = 0;
    this.AnimationUnitAmountMax = 0;
    this.AnimationUnitDelay = 0.0f;
    this.LocalizeUnexpected = null;
    this.LocalizeErosions = null;
    this.LocalizeStep = null;
    this.LocalizeTile = null;
    this.LocalizeMapInfo = null;
    this.LocalizeManage = null;
    this.LocalizeUpgrade = null;
    this.LocalizeTreasureBox = null;
    this.IndividualErosionDailyCount = 0;
  }
}


static public class ConquestEventExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*EventContentId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*MainStoryEventContentId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*ConquestEventType*/, 4 /*FlatData.ConquestEventType*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*UseErosion*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 12 /*UseUnexpectedEvent*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 14 /*UseCalculate*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 16 /*UseConquestObject*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 18 /*EvnetMapGoalLocalize*/, false)
      && verifier.VerifyString(tablePos, 20 /*EvnetMapNameLocalize*/, false)
      && verifier.VerifyField(tablePos, 22 /*MapEnterScenarioGroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 24 /*EvnetScenarioBG*/, false)
      && verifier.VerifyField(tablePos, 26 /*ManageUnitChange*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 28 /*AssistCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 30 /*PlayTimeLimitInSeconds*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 32 /*AnimationUnitAmountMin*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*AnimationUnitAmountMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 36 /*AnimationUnitDelay*/, 4 /*float*/, 4, false)
      && verifier.VerifyString(tablePos, 38 /*LocalizeUnexpected*/, false)
      && verifier.VerifyString(tablePos, 40 /*LocalizeErosions*/, false)
      && verifier.VerifyString(tablePos, 42 /*LocalizeStep*/, false)
      && verifier.VerifyString(tablePos, 44 /*LocalizeTile*/, false)
      && verifier.VerifyString(tablePos, 46 /*LocalizeMapInfo*/, false)
      && verifier.VerifyString(tablePos, 48 /*LocalizeManage*/, false)
      && verifier.VerifyString(tablePos, 50 /*LocalizeUpgrade*/, false)
      && verifier.VerifyString(tablePos, 52 /*LocalizeTreasureBox*/, false)
      && verifier.VerifyField(tablePos, 54 /*IndividualErosionDailyCount*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
